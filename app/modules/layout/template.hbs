<section local-class="layout-container">
	<h2>bp-layout</h2>
	<p>bp-layout 的实现依靠 flex 布局，在使用之前需要了解到关于 flex 布局的一些知识。
		并且保证浏览器的兼容性。
	</p>
	<p>bp-layout 是布局器也是一个基本的组件，所以一个组件所能接受的参数对其也是适用的，
		例如 classNames （为组件添加类名） 这样的参数。具体查看 emberjs 中
		component 的一些文档。
	</p>
	<h4>
		布局器有五个非必选属性,包括: direction / main / cross / wrap / multi;
	</h4>
	<ul>
		<li>direction: 目前支持
			{{#bp-button onClick=(action (mut direction) 'col')}}col{{/bp-button}}
			以及
			{{#bp-button onClick=(action (mut direction) 'row')}}row{{/bp-button}}
			;默认为 'row'.
		</li>
		<li>main: 定义元素在主轴 (main) 上的排列方式.
			支持的值有:
			{{#bp-button onClick=(action (mut main) 'start')}}start{{/bp-button}}
			{{#bp-button onClick=(action (mut main) 'end')}}end{{/bp-button}}
			{{#bp-button onClick=(action (mut main) 'center')}}center{{/bp-button}}
			{{#bp-button onClick=(action (mut main) 'between')}}between{{/bp-button}}
			{{#bp-button onClick=(action (mut main) 'around')}}around{{/bp-button}}
			;默认值: 'start'.
		</li>
		<li>cross: 定义元素在交叉轴 (cross Axis) 上的排列方式.支持的值有:
			{{#bp-button onClick=(action (mut cross) 'start')}}start{{/bp-button}}
			{{#bp-button onClick=(action (mut cross) 'end')}}end{{/bp-button}}
			{{#bp-button onClick=(action (mut cross) 'center')}}center{{/bp-button}}
			{{#bp-button onClick=(action (mut cross) 'stretch')}}stretch{{/bp-button}}
			{{#bp-button onClick=(action (mut cross) 'baseline')}}baseline{{/bp-button}}
			;默认值: 'stretch'.
		</li>
		<li>wrap: 定义是否换行.默认为 false.
			{{#bp-button onClick=(action (mut wrap) true)}}Wrap to true{{/bp-button}}
			{{#bp-button onClick=(action (mut wrap) false)}}Wrap to false{{/bp-button}}
		</li>
		<li>multi: 定义多行的排列方式,在 wrap 为false 的时候,不起作用.支持的值有:
			{{#bp-button onClick=(action (mut multi) 'start')}}start{{/bp-button}}
			{{#bp-button onClick=(action (mut multi) 'end')}}end{{/bp-button}}
			{{#bp-button onClick=(action (mut multi) 'center')}}center{{/bp-button}}
			{{#bp-button onClick=(action (mut multi) 'between')}}between{{/bp-button}}
			{{#bp-button onClick=(action (mut multi) 'around')}}around{{/bp-button}}
			{{#bp-button onClick=(action (mut multi) 'stretch')}}stretch{{/bp-button}}
			;默认值:
			'stretch'.</li>
	</ul>
	{{#bp-layout direction main cross wrap multi classNames="demo-layout" local-class="layout-demo"}}
		<div>1</div>
		<div>2</div>
		<div>3</div>
		<div>4</div>
		<div>5</div>
		<div>6</div>
		<div>7</div>
		<div>8</div>
	{{/bp-layout}}
	<h3>使用注意</h3>
	<p>
		bp-layout 本质上是为一个 div（未设置 tagName） 标签添加预设的一些 css 样式，再通过
		传入一些参数，改变其添加的 css 样式（通过 classNameBindings）,从而达到使用简单几个
		属性值就可以控制相关布局的要求。
	</p>
</section>